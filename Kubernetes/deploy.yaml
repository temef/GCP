apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx-container
        image: docker.io/cse4100/kubernetes-custom-nginx:1.0
        resources:
          limits:
            cpu: '100m'
            memory: '16Mi'
        ports:
        - containerPort: 80
        volumeMounts:
        - name: auth-volume
          mountPath: /etc/nginx/htpasswd
          subPath: htpasswd
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
      - name: auth-volume
        secret:
          secretName: nginx-auth
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: css-secret-web-server
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    events {
      worker_connections 1024;
    }
    http {
      server {
        listen 80;
        server_name localhost;

        location / {
          root   /usr/share/nginx/html;
          auth_basic            "Restricted Access!";
          auth_basic_user_file  /etc/nginx/htpasswd;
        }

        location /public {
          root   /usr/share/nginx/public;
          auth_basic off;
          try_files /kube.png =404;
        }
      }
    }
